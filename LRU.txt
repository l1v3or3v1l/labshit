#include <stdio.h>

int lastused(int i, int p[], int f) {
	for (int l = i; l >= 0; l--) {
		if (p[l] == f) {
			return l;
		}
	}
	return -1;
}

int minidx(int l[], int nf) {
	int min = l[0];
	int idx = 0;
	for (int i = 1; i < nf; i++) {
		if (l[i] < min) {
			min = l[i];
			idx = i;
		}
	}
	return idx;
}

void main() {
	int n, i, nf, j, avail, k = 0, c = 0, l, m;
	printf("Enter no of pages : ");
	scanf("%d", &n);
	int p[n];
	printf("Enter the reference string : ");
	for (i = 0; i < n; i++) {
		scanf("%d", &p[i]);
	}
	printf("Enter no of frames : ");
	scanf("%d", &nf);
	int f[nf];
	for (i = 0; i < nf; i++) {
		f[i] = -1;
	}
	printf("ref string\t\tpage frames\n");
	for (i = 0; i < n; i++) {
		printf("%d\t",p[i]);
		for (j = 0; j < nf; j++) {
			if (f[j] == p[i]) {
				avail = 1;
			}
		}
		if (avail != 1) {
			int lu[nf];
			for (m = 0; m < nf; m++) {
				lu[m] = lastused(i, p, f[m]);
			}
			k = minidx(lu, nf);
			f[k] = p[i];
			k = (k+1)%nf;
						c++;
			for (j = 0; j < nf; j++) {
				printf("%d\t", f[j]);
			}
		} else {
			avail = 0;
		}
		printf("\n");
	}
	printf("No of page faults : %d\t", c);
}